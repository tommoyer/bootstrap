---
# tasks file for user-config
- name: Clone dotfiles (read-only)
  ansible.builtin.git:
    repo: https://github.com/tommoyer/dotfiles.git
    dest: ${HOME}/.dotfiles

- name: Change remote for dotfiles
  ansible.builtin.command: "git remote set-url origin git@github.com:tommoyer/dotfiles.git"
  args:
    chdir: ${HOME}/.dotfiles

- name: Install python packages
  ansible.builtin.pip:
    name: "{{ item }}"
  loop: "{{ pips }}"

- name: Install zimfw using its script
  ignore_errors: yes
  register: zimfw_output
  shell: "curl -fsSL https://raw.githubusercontent.com/zimfw/install/master/install.zsh | /usr/bin/zsh"
  args:
    executable: /usr/bin/zsh
  changed_when: "'already exists' not in zimfw_output.stderr"
  failed_when: false

- name: Delete .zshrc and .zimrc
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - ${HOME}/.zshrc
    - ${HOME}/.zimrc

- name: Create watson directory
  ansible.builtin.file:
    path: ${HOME}/.config/watson
    state: directory
    mode: '0755'

- name: Stow dotfiles
  stow:
    state: latest
    package: '{{ item }}'
    dir: "${HOME}/.dotfiles"
    target: '$HOME'
  loop: "{{ dotfiles }}"

- name: Fix directory permissions
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0700'
  loop:
    - ${HOME}/.gnupg
    - ${HOME}/.ssh

- name: Import GPG public key
  ansible.builtin.command: gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys {{ gpg_key }}

- name: Install zimfw modules
  shell: "source /home/tmoyer/.zim/zimfw.zsh install"
  args:
    executable: /usr/bin/zsh

- name: Change remote for bootstrap
  ansible.builtin.command: "git remote set-url origin git@github.com:tommoyer/bootstrap.git"
  args:
    chdir: ${HOME}/Repos/tommoyer/bootstrap

- name: Create Yubikey setup script
  copy:
    src: finish-yubikey-setup.sh
    dest: ${HOME}/finish-yubikey-setup.sh
    mode: u=rwx,g=r,o=r

- name: Install Streamdeck udev rules
  become: yes
  become_method: sudo
  copy:
    src: 70-streamdeck.rules
    dest: /etc/udev/rules.d/70-streamdeck.rules
    mode: u=rw,g=r,o=r

- name: Reload udev rules
  become: yes
  become_method: sudo
  ansible.builtin.command: udevadm control --reload-rules

- name: Download custom TickTick web app
  ansible.builtin.get_url:
    url: https://thomasmoyer.org/TickTick-linux-x64.tar.xz
    dest: /home/tmoyer/TickTick-linux-x64.tar.xz
    checksum: sha256:9c8e38c98222d9e5d1a1ae1bee1d02020630a5081994918198937d467354e147

- name: Extract custom TickTick web app
  ansible.builtin.unarchive:
    src: /home/tmoyer/TickTick-linux-x64.tar.xz
    dest: /home/tmoyer/Applications/
    remote_src: yes

- name: Delete downloaded archive file
  ansible.builtin.file:
    path: /home/tmoyer/TickTick-linux-x64.tar.xz
    state: absent

- name: Update list of installed applications (1/2)
  ansible.builtin.command: update-desktop-database ${HOME}/.local/share/applications

- name: Update list of installed applications (2/2)
  ansible.builtin.command: update-desktop-database ${HOME}/.local/share/flatpak/exports/share/applications
