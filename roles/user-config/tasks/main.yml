---
# tasks file for user-config
- name: Create the user
  become: yes
  become_method: sudo
  ansible.builtin.user:
    name: "{{ user.name }}"
    comment: "{{ user.full_name }}"
    create_home: True
    shell: /usr/bin/zsh
    state: present

- name: Clone dotfiles (read-only)
  ansible.builtin.git:
    repo: https://github.com/tommoyer/dotfiles.git
    dest: ${HOME}/.dotfiles

- name: Change remote for dotfiles
  ansible.builtin.command: "git remote set-url origin git@github.com:tommoyer/dotfiles.git"
  args:
    chdir: ${HOME}/.dotfiles

- name: Ensure SSH authorized keys file does not exist (needed for containers)
  ansible.builtin.file:
    path: ${HOME}/.ssh/authorized_keys
    state: absent

- name: Stow dotfiles
  stow:
    state: latest
    package: '{{ item }}'
    dir: "${HOME}/.dotfiles"
    target: '$HOME'
  loop: "{{ dotfiles }}"

- name: Fix directory permissions
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0700'
  loop:
    - ${HOME}/.gnupg
    - ${HOME}/.ssh

- name: Change remote for bootstrap
  ansible.builtin.command: "git remote set-url origin git@github.com:tommoyer/bootstrap.git"
  args:
    chdir: ${HOME}/Repos/tommoyer/bootstrap
 
- name: Download pyenv install script
  ansible.builtin.get_url:
    url: https://pyenv.run
    dest: /tmp/install-pyenv.sh
    mode: '0740'

- name: Install pyenv using its script
  ignore_errors: yes
  shell: "/tmp/install-pyenv.sh"
  args:
    executable: /bin/bash
  failed_when: false

- name: Delete downloaded script
  ansible.builtin.file:
    path: /tmp/install-pyenv.sh
    state: absent
  