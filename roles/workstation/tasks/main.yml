---
# tasks file for vworkstation

- name: Enable PPAs
  become: yes
  become_method: sudo
  ansible.builtin.command: add-apt-repository -y "{{ item }}"
  loop: "{{ ppas }}"

- name: Install GPG key for SublimeText
  become: true
  become_method: sudo
  ansible.builtin.get_url:
    url: https://download.sublimetext.com/sublimehq-pub.gpg
    dest: /etc/apt/keyrings/sublimehq-pub.asc
    mode: '0644'
    force: true

- name: Add Sublime repository
  become: true
  become_method: sudo
  apt_repository:
    repo: 'deb [signed-by=/etc/apt/keyrings/sublimehq-pub.asc] https://download.sublimetext.com/ apt/stable/'
    state: present
    filename: "sublime-text.list"

- name: Update apt cache
  become: true
  become_method: sudo
  ansible.builtin.apt:
    update_cache: yes

- name: Install workstation packages
  become: yes
  become_method: sudo
  ansible.builtin.package:
    name: "{{ workstation_packages }}"
    state: latest

- name: Install downloaded debs
  become: yes
  become_method: sudo
  ansible.builtin.apt:
    deb: "{{ item }}"
  loop: "{{ deb_downloads }}"

- name: Install workstation snap packages
  become: yes
  become_method: sudo
  community.general.snap:
    name: "{{ item }}"
    state: present
  loop: "{{ workstation_snaps }}"

# - name: Install workstation snap packages (classic)
#   become: yes
#   become_method: sudo
#   community.general.snap:
#     name: "{{ item }}"
#     state: present
#     classic: true
#   loop: "{{ classic_snaps }}"

- name: Add the flathub flatpak repository remote to the user installation
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user

- name: Install flatpaks
  community.general.flatpak:
    name: "{{ flatpaks }}"
    state: present
    method: user

- name: Configure PAM for Yubikey
  become: true
  become_method: sudo
  copy:
    src: common-u2f
    dest: /etc/pam.d/common-u2f

- name: Add Yubikey as auth option
  become: true
  become_method: sudo
  args:
    chdir: /etc/pam.d
  shell:
    cmd: |
      for f in $(grep -l "@include common-auth" *); do
        if [[ $f == *~ ]]; then continue; fi
        if grep -q "@include common-u2f" $f; then continue; fi
        mv $f $f~
        awk '/@include common-auth/ {print "@include common-u2f"}; {print}' $f~ > $f
      done

- name: Download tailscale install script
  ansible.builtin.get_url:
    url: https://tailscale.com/install.sh
    dest: /tmp/install-tailscale.sh
    mode: '0740'

- name: Install tailscale using its script
  become: yes
  become_method: sudo
  ignore_errors: yes
  shell: "/tmp/install-tailscale.sh"
  args:
    executable: /bin/sh
  failed_when: false

- name: Delete downloaded script
  ansible.builtin.file:
    path: /tmp/install-tailscale.sh
    state: absent

- name: Install Watson from wheel
  community.general.pipx:
    name: td_watson
    source: https://thomasmoyer.org/td_watson-2.1.0+notes-py2.py3-none-any.whl

- name: Install watson2sf from wheel
  community.general.pipx:
    name: watson2sf
    source: https://thomasmoyer.org/watson2sf-0.1.2-py3-none-any.whl

- name: Create watson directory
  ansible.builtin.file:
    path: ${HOME}/.config/watson
    state: directory
    mode: '0755'

- name: Post-Ansible finish script
  template:
    src: files/finish-setup.sh
    dest: ${HOME}/finish-setup.sh
    mode: u=rwx,g=r,o=r

- name: LXD config preseed file
  copy:
    src: lxd-init.yaml
    dest: ${HOME}/lxd-init.yaml
    mode: u=rwx,g=r,o=r

- name: LXD default profile
  copy:
    src: lxd-default-profile.yaml
    dest: ${HOME}/lxd-default-profile.yaml
    mode: u=rwx,g=r,o=r

- name: Gnome terminal settings
  copy:
    src: gnome_terminal_settings_backup.dconf
    dest: ${HOME}/gnome_terminal_settings_backup.dconf
    mode: u=rwx,g=r,o=r

- name: LXD DNS setup
  become: yes
  become_method: sudo
  copy:
    src: lxd-dns-lxdbr0.service
    dest: /etc/systemd/system/lxd-dns-lxdbr0.service
    mode: u=rwx,g=r,o=r

- name: Enable LXD DNS
  become: yes
  become_method: sudo
  ansible.builtin.command: systemctl daemon-reload

- name: Enable LXD DNS
  become: yes
  become_method: sudo
  ansible.builtin.command: systemctl enable --now lxd-dns-lxdbr0

- name: Install Streamdeck udev rules
  become: yes
  become_method: sudo
  copy:
    src: 70-streamdeck.rules
    dest: /etc/udev/rules.d/70-streamdeck.rules
    mode: u=rw,g=r,o=r

- name: Reload udev rules
  become: yes
  become_method: sudo
  ansible.builtin.command: udevadm control --reload-rules

- name: Configure groups for user
  become: yes
  become_method: sudo
  ansible.builtin.user:
    name: "{{ user.name }}"
    comment: "{{ user.full_name }}"
    create_home: True
    shell: /usr/bin/zsh
    state: present
    groups: lxd,libvirt
    append: yes

- name: Update list of installed applications (1/2)
  ansible.builtin.command: update-desktop-database ${HOME}/.local/share/applications

- name: Update list of installed applications (2/2)
  ansible.builtin.command: update-desktop-database ${HOME}/.local/share/flatpak/exports/share/applications

- name: Mouse highlight on ctrl
  ansible.builtin.command: gsettings set org.gnome.desktop.interface locate-pointer true

- name: Update Gnome Terminal shortcuts
  ansible.builtin.command: gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ next-tab '<Primary>Tab'

- name: Update Gnome Terminal shortcuts
  ansible.builtin.command: gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ prev-tab '<Primary><Shift>Tab'

- name: Configuring Gnome Evolution
  ansible.builtin.command: gsettings set org.gnome.evolution-data-server.calendar notify-with-tray true

- name: Configuring Gnome window settings
  ansible.builtin.command: gsettings set org.gnome.mutter center-new-windows true